require "rounding_end.jinc"

inline
fn poly_make_hint(reg ptr u32[Li2_polydeg] f0 f1 hints)
	-> stack u32, reg ptr u32[Li2_polydeg]
{
	stack u32 weight;
	reg u64 i;
	reg u32 a0 a1;
	reg u32 h;

	i = 0;
	while(i < Li2_polydeg) {
		hints[(int) i] = 0;
		i += 1;
	}

	weight = 0;
	i = 0;
	while(i < Li2_polydeg) {
		a0 = f0[(int) i];
		a1 = f1[(int) i];
		h = make_hint(a0, a1);
		hints[(int) i] = h;
		weight += h;
		i += 1;
	}

	return weight, hints;
}

fn poly_use_hint(reg ptr u32[Li2_polydeg] w1 hints)
	-> reg ptr u32[Li2_polydeg]
{
	reg u64 i;
	reg u32 a h;

	i = 0;
	while (i < Li2_polydeg) {
		h = hints[(int) i];
		a = w1[(int) i];
		a = use_hint(a, h);
		w1[(int) i] = a;
		i += 1;
	}
	return w1;
}